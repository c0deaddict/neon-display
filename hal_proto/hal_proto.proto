syntax = "proto3";

option go_package = "github.com/c0deaddict/neon-display/hal_proto";

package hal_proto;

import "google/protobuf/empty.proto";
import "google/protobuf/descriptor.proto";

extend google.protobuf.EnumValueOptions {
  optional string name = 50000;
}

service Hal {
  rpc WatchEvents(google.protobuf.Empty) returns (stream Event) {}
  rpc SetDisplayPower(DisplayPower) returns (google.protobuf.Empty) {}
  rpc GetLedEffects(google.protobuf.Empty) returns (LedEffectList) {}
  rpc UpdateLeds(LedState) returns (LedState) {}
}

message Event {
  EventSource source = 1;
  bool state = 2;
}

enum EventSource {
  Pir = 0 [(name) = "pir"];
  RedButton = 1 [(name) = "red_button"];
  YellowButton = 2 [(name) = "yellow_button"];
}

message DisplayPower {
  bool power = 1;
}

message LedsPower {
  bool power = 1;
}

message LedEffectList {
  repeated string effects = 1;
}

message LedState {
  optional bool state = 1;
  optional uint32 brightness = 2;
  optional uint32 color = 3;
  optional string effect = 4;
}
